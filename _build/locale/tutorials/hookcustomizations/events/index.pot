# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2001-2016, GeoNetwork opensource. Licensed under Creative Commons Attribution ShareAlike (Unported) v3.0 License
# This file is distributed under the same license as the GeoNetwork opensource package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: GeoNetwork opensource 3.4\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2017-11-22 11:54+0100\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../source/tutorials/hookcustomizations/events/index.rst:4
msgid "Using Events"
msgstr ""

#: ../../source/tutorials/hookcustomizations/events/index.rst:6
msgid "From GeoNetwork 3.0.x on, there are a number of events you can listen to on your Java code."
msgstr ""

#: ../../source/tutorials/hookcustomizations/events/index.rst:9
msgid "Enabling Event Listeners"
msgstr ""

#: ../../source/tutorials/hookcustomizations/events/index.rst:11
msgid "To enable this on your Maven project, you have to add the event dependencies. Edit the file custom/pom.xml and add the dependencies tag:"
msgstr ""

#: ../../source/tutorials/hookcustomizations/events/index.rst:30
msgid "Then create the file custom/src/main/resources/config-spring-geonetwork.xml to tell Spring to load your custom beans adding the following content:"
msgstr ""

#: ../../source/tutorials/hookcustomizations/events/index.rst:34
msgid "<?xml version=\"1.0\" encoding=\"UTF-8\"?> <beans xmlns=\"http://www.springframework.org/schema/beans\" xmlns:util=\"http://www.springframework.org/schema/util\" xmlns:context=\"http://www.springframework.org/schema/context\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xsi:schemaLocation=\" http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util.xsd http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.2.xsd\" > <bean class=\"org.fao.geonet.events.listeners.MyCustomListener\" ></bean> </beans>"
msgstr ""

#: ../../source/tutorials/hookcustomizations/events/index.rst:49
msgid "This file should contain a list of all the classes that listen to events inside GeoNetwork scope."
msgstr ""

#: ../../source/tutorials/hookcustomizations/events/index.rst:52
msgid "Simple Example"
msgstr ""

#: ../../source/tutorials/hookcustomizations/events/index.rst:54
msgid "We can add a simple example listener like this one, which will print a string every time a metadata gets removed."
msgstr ""

#: ../../source/tutorials/hookcustomizations/events/index.rst:58
msgid "package org.fao.geonet.events.listeners;"
msgstr ""

#: ../../source/tutorials/hookcustomizations/events/index.rst:60
msgid "import org.fao.geonet.domain.*;"
msgstr ""

#: ../../source/tutorials/hookcustomizations/events/index.rst:62
msgid "import org.fao.geonet.events.md.MetadataRemove;"
msgstr ""

#: ../../source/tutorials/hookcustomizations/events/index.rst:64
msgid "import org.springframework.context.ApplicationListener;"
msgstr ""

#: ../../source/tutorials/hookcustomizations/events/index.rst:66
msgid "import org.springframework.stereotype.Component;"
msgstr ""

#: ../../source/tutorials/hookcustomizations/events/index.rst:68
msgid "@Component public class MyCustomListener implements ApplicationListener<MetadataRemove> {"
msgstr ""

#: ../../source/tutorials/hookcustomizations/events/index.rst:70
msgid "@Override public void onApplicationEvent(MetadataRemove event) {"
msgstr ""

#: ../../source/tutorials/hookcustomizations/events/index.rst:72
msgid "System.out.println(\"REMOVED\");"
msgstr ""

#: ../../source/tutorials/hookcustomizations/events/index.rst:73
#: ../../source/tutorials/hookcustomizations/events/index.rst:74
msgid "}"
msgstr ""

#: ../../source/tutorials/hookcustomizations/events/index.rst:77
msgid "For example, we can call an external REST API that gets triggered every time a Metadata gets removed or updated."
msgstr ""

#: ../../source/tutorials/hookcustomizations/events/index.rst:81
msgid "GeoNetwork API"
msgstr ""

#: ../../source/tutorials/hookcustomizations/events/index.rst:83
msgid "There is also a new API you can use to interact with GeoNetwork from an external script. See more on :ref:`api-guide`."
msgstr ""

